;; see example here: https://github.com/nikitavoloboev/dotfiles/blob/master/karabiner/karabiner.edn
;; goku examples: https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org
;; goku tutorial: https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md
;; To check sytax is correct, run `goku` in terminal

;; !  | means mandatory -   modifier(s) alone when pressend change behavior
;; #  | means optional  -   modifiers are optional (but atleast one necessary)
;;
;; :!Ca is keycode :a and prefix a with !C
;;
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;;
;; ## | optional any (this has no effect when used on the RHS; only LHS)
;; !! | command + control + optional + shift (hyper)
;;
;; to understand better how modifiers work in karabiner
;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/
;;
;; need to prefix C T O S F with ! or #
;;
;; code for all this:
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/b9b334a187379f9bc8182ad59e2cca2a1789e9c0/src/karabiner_configurator/keys.clj#L68
{
  :profiles {
    :Default {  
      :default true
      :sim     50     ;; simultaneous_threshold_milliseconds (def: 50)
                      ;; keys need to be pressed within this threshold to be considered simultaneous
      :delay   0      ;; to_delayed_action_delay_milliseconds (def: 500)
                      ;; basically it means time after which the key press is count delayed
      :alone   0     ;; to_if_alone_timeout_milliseconds (def: 1000)
                      ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
      :held    0    ;; to_if_held_down_threshold_milliseconds (def: 500)
                      ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
    }
  } ;; profiles

  :devices {
    ; :kinesis-keyboard [ {:vendor_id 1523 :product_id 7} ]
    :kinesis-keyboard [ {:vendor_id 10730 :product_id 258} {:vendor_id 1523 :product_id 7} ]
    :apple-keyboard [ {:vendor_id 1452 :product_id 635} ]
    :iris-keyboard [ {:vendor_id 51984 :product_id 16982} ]
  } ;; devices

  :applications {
    :slack-app ["^com\\.tinyspeck\\.slackmacgap$"]
    :chrome-browser-apps ["^com\\.brave\\.Browser", "^com\\.google\\.Chrome"]
    :google-chrome-app ["^com\\.google\\.Chrome"]
  } ;; applications

  :templates {
    :alfred "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"%s\" in workflow \"com.stephanb.launchers\" with argument \"%s\"'"
    :hs "/usr/local/bin/hs -c \"SwitchToApp('%s')\""
    ; :typechars "/usr/local/bin/typechars "
   } ;; templates

  ;; simlayers are basically "hyper" keys
  ;; layers works too, but only recommended for non-typing keys like . or tab
  ;; to use more regular typing keys, use simlayers
  ;; interesting crazy example of simlayer usage: https://github.com/nikitavoloboev/dotfiles/blob/master/karabiner/karabiner.edn
  ; :simlayers {
  ;   :f-mode {:key :f}
  ;   :j-mode {:key :j}
  ;   :d-mode {:key :d}
  ;   :k-mode {:key :k}
  ;   :v-mode {:key :v}
  ;   :m-mode {:key :m}
  ; } ;; simlayers

  :main [
    ;; each manipulator has a description and multiple rules
    ;;
    ;;{:des "..."                               ;; -> description
    ;; :rules[
    ;;          [<from>  <to>  <conditions>]    ;; -> rule 1
    ;;          [<from>  <to>  <conditions>]    ;; -> rule 2
    ;; ]}
    ;;
    ;; rule [:period ["period-mode" 1] nil {:afterup ["period-mode" 0] :alone :period}]
    ;;       |_____| |_______________| |_| |_________________________________________|
    ;;        <from>    <to>      <conditions>         <other options>
    ;;
    ;; karabiner docs: ;; https://pqrs.org/osx/karabiner/json.html#complex_modifications-manipulator-definition
    ;; <other options> includs ~to_if_alone~, ~to_if_held_down~,~to_after_key_up~, ~to_delayed_action~ and ~parameters~.
    ;; <other options> section
    ;; to_if_alone                                    | :alone
    ;; to_if_held_down                                | :held
    ;; to_after_key_up                                | :afterup
    ;; to_delayed_action                              | :delayed
    ;;   to_if_canceled                               |   :cancled
    ;;   to_if_invoked                                |   :invoked
    ;; parameters                                     | :params
    ;;   basic.to_if_alone_timeout_milliseconds       |   :alone
    ;;   basic.to_if_held_down_threshold_milliseconds |   :held
    ;;   to_delayed_action_delay_milliseconds         |   :delay  FIXME should there be a "basic.", there's none on the spec page
    ;;
    ;;
    ;; (custom variables) & modifiers -> Advanced
    ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable

    ; {:des "simultaneous j k press to ESC" :rules [[[:j :k] :escape]]}
    ; {:des "si/base-config/keys.vimmultaneous s d f press to ( )" :rules [[[:s :d] :!S9] [[:d :f] :!S0]]}
    ; {:des "simultaneous x c v press to { }" :rules [[[:x :c] :!Sopen_bracket] [[:c :v] :!Sclose_bracket]]}
    ; {:des "simultaneous n m press to +" :rules [[[:n :m] :!Sequal_sign]]}
    ; {:des "simultaneous k l press to =" :rules [[[:k :l] :equal_sign]]}
    ; {:des "simultaneous m , press to _" :rules [[[:m :comma] :!Shyphen]]}
    ; {:des "simultaneous , . press to -" :rules [[[:comma :period] :hyphen]]}
    ; {:des "simultaneous v b press to `" :rules [[[:v :b] :grave_accent_and_tilde]]}
    ; {:des "simultaneous h j press to ~" :rules [[[:h :j] :!Sgrave_accent_and_tilde]]}
    ; {:des "simultaneous j , press to |" :rules [[[:j :comma] :!Sbackslash]]}
    ; {:des "simultaneous l , press to backslash" :rules [[[:l :comma] :backslash]]}
    ;
    ; {:des "simultaneous d v press to !" :rules [[[:d :v] :!S1]]}
    ; {:des "simultaneous s r press to @" :rules [[[:s :r] :!S2]]}
    ; {:des "simultaneous f g press to #" :rules [[[:f :g] :!S3]]}
    ; {:des "simultaneous r g press to $" :rules [[[:r :g] :!S4]]}
    ; {:des "simultaneous n j press to %" :rules [[[:n :j] :!S5]]}
    ; {:des "simultaneous x d press to ^" :rules [[[:x :d] :!S6]]}
    ; {:des "simultaneous e f press to &" :rules [[[:e :f] :!S7]]}
    ; {:des "simultaneous m k press to *" :rules [[[:m :k] :!S8]]}


    {:des "simultaneous j k press to ESC" :rules [[:condi :kinesis-keyboard :apple-keyboard] [[:j :k] :escape]]}
    ; {:des "simultaneous s d press to (" :rules [[:condi :!iris-keyboard] [[:s :d] :!S9]]}
    ; {:des "simultaneous d v press to )" :rules [[:condi :!iris-keyboard] [[:d :v] :!S0]]}
    ; {:des "simultaneous x c v press to { }" :rules [[:condi :!iris-keyboard] [[:x :c] :!Sopen_bracket] [[:c :v] :!Sclose_bracket]]}
    ; {:des "simultaneous j i h u  press to [ ]" :rules [[:condi :!iris-keyboard] [[:j :i] :open_bracket] [[:h :u] :close_bracket]]}
    ; {:des "simultaneous n m press to +" :rules [[:condi :!iris-keyboard] [[:n :m] :!Sequal_sign]]}
    ; {:des "simultaneous k l press to =" :rules [[:condi :!iris-keyboard] [[:k :l] :equal_sign]]}
    ; {:des "simultaneous m , press to _" :rules [[:condi :!iris-keyboard] [[:m :comma] :!Shyphen]]}
    ; {:des "simultaneous , . press to -" :rules [[:condi :!iris-keyboard] [[:comma :period] :hyphen]]}
    ; {:des "simultaneous v b press to `" :rules [[:condi :!iris-keyboard] [[:v :b] :grave_accent_and_tilde]]}
    ; {:des "simultaneous h j press to ~" :rules [[:condi :!iris-keyboard] [[:h :j] :!Sgrave_accent_and_tilde]]}
    ; {:des "simultaneous j , press to |" :rules [[:condi :!iris-keyboard] [[:j :comma] :!Sbackslash]]}
    ; {:des "simultaneous l , press to backslash" :rules [[:condi :!iris-keyboard] [[:l :comma] :backslash]]}
    ;
    ; {:des "simultaneous f b press to !" :rules [[:condi :!iris-keyboard] [[:f :b] :!S1]]}
    ; {:des "simultaneous s r press to @" :rules [[:condi :!iris-keyboard] [[:s :r] :!S2]]}
    ; {:des "simultaneous s f press to #" :rules [[:condi :!iris-keyboard] [[:s :f] :!S3]]}
    ; {:des "simultaneous r g press to $" :rules [[:condi :!iris-keyboard] [[:r :g] :!S4]]}
    ; {:des "simultaneous n j press to %" :rules [[:condi :!iris-keyboard] [[:n :j] :!S5]]}
    ; {:des "simultaneous x d press to ^" :rules [[:condi :!iris-keyboard] [[:x :d] :!S6]]}
    ; {:des "simultaneous s v press to &" :rules [[:condi :!iris-keyboard] [[:s :v] :!S7]]}
    ; {:des "simultaneous m k press to *" :rules [[:condi :!iris-keyboard] [[:m :k] :!S8]]}
    
    ; {:des "simultaneous d f press to enter" :rules [[:condi :kinesis-keyboard :apple-keyboard] [[:d :f] :return_or_enter]]}
    {:des "simultaneous f g press to del" :rules [[:condi :kinesis-keyboard :apple-keyboard] [[:f :g] :delete_forward]]}
    ; {:des "simultaneous c v press to enter" :rules [[:condi :kinesis-keyboard :apple-keyboard] [[:c :v] :return_or_enter]]}

    {:des "improved thumb cluster" :rules [
      ;; lcmd lctrl           lopt rcmd
      [:##left_control  :left_command :kinesis-keyboard]
      [:##right_control :right_command :kinesis-keyboard]
      [:##left_option :left_control :kinesis-keyboard]
      [:##right_command :left_option :kinesis-keyboard]
    ]}

    ; {:des "end -> delete" :rules [
    ;   [:##end :delete_forward :kinesis-keyboard]
    ; ]}

    {:des "slack shortcut overrides" :rules [
      [:condi :slack-app] 
      [:!Ce :!CSbackslash] ; react with emoji
      [:!Ch :!Copen_bracket] ; history prev
      [:!Cl :!Cclose_bracket] ; history next 
      [:!Cj :!OSdown_arrow] ; next unread
      [:!Ck :!OSup_arrow] ; prev unread
      [:!Co :!CSk] ; open DM 
      [:!Cs :!CSy] ; set status 
    ]}

    {:des "chrome shortcut override" :rules [
      [:condi :google-chrome-app] 
      [:!CSi :!COi] ; Open dev tools
    ]}

    {:des "text snippets mode" :rules [
      [:end ["snippet-mode" 1] ["snippet-mode" 0] {:afterup ["snippet-mode" 0]}]
      ; [:!CTOSm ["snippet-mode" 1] ["snippet-mode" 0] {:afterup ["snippet-mode" 0]}]
      ; enter code block 
      [:i [:!Sreturn_or_enter :grave_accent_and_tilde :grave_accent_and_tilde :grave_accent_and_tilde :!Sreturn_or_enter :!Sreturn_or_enter :grave_accent_and_tilde :grave_accent_and_tilde :grave_accent_and_tilde  :up_arrow] ["snippet-mode" 1]]
    ]}

    {:des "shift mode" :rules [
      [:condi :kinesis-keyboard] 
      [:delete_or_backspace ["shift-mode" 1] ["symbol-mode" 0] {:afterup ["shift-mode" 0]}]
      [:q [:!Sq] ["shift-mode" 1]] [:w [:!Sw] ["shift-mode" 1]] [:e [:!Se] ["shift-mode" 1]]
      [:r [:!Sr] ["shift-mode" 1]]
      [:t [:!St] ["shift-mode" 1]]
      [:y [:!Sy] ["shift-mode" 1]]
      [:u [:!Su] ["shift-mode" 1]]
      [:i [:!Si] ["shift-mode" 1]]
      [:o [:!So] ["shift-mode" 1]]
      [:p [:!Sp] ["shift-mode" 1]]
      [:backslash [:!Sbackslash] ["shift-mode" 1]]
      [:a [:!Sa] ["shift-mode" 1]]
      [:s [:!Ss] ["shift-mode" 1]]
      [:d [:!Sd] ["shift-mode" 1]]
      [:f [:!Sf] ["shift-mode" 1]]
      [:g [:!Sg] ["shift-mode" 1]]
      [:h [:!Sh] ["shift-mode" 1]]
      [:j [:!Sj] ["shift-mode" 1]]
      [:k [:!Sk] ["shift-mode" 1]]
      [:l [:!Sl] ["shift-mode" 1]]
      [:semicolon [:!Ssemicolon] ["shift-mode" 1]]
      [:quote [:!Squote] ["shift-mode" 1]]
      [:z [:!Sz] ["shift-mode" 1]]
      [:x [:!Sx] ["shift-mode" 1]]
      [:c [:!Sc] ["shift-mode" 1]]
      [:v [:!Sv] ["shift-mode" 1]]
      [:b [:!Sb] ["shift-mode" 1]]
      [:n [:!Sn] ["shift-mode" 1]]
      [:m [:!Sm] ["shift-mode" 1]]
      [:comma [:!Scomma] ["shift-mode" 1]]
      [:period [:!Speriod] ["shift-mode" 1]]
      [:slash [:!Sslash] ["shift-mode" 1]]
      [:open_bracket [:!Sopen_bracket] ["shift-mode" 1]]
      [:close_bracket [:!Sclose_bracket] ["shift-mode" 1]]
      [:up_arrow [:!Sup_arrow] ["shift-mode" 1]]
      [:down_arrow [:!Sdown_arrow] ["shift-mode" 1]]
      [:left_arrow [:!Sleft_arrow] ["shift-mode" 1]]
      [:right_arrow [:!Sright_arrow] ["shift-mode" 1]]
      [:equal_sign [:!Sequal_sign] ["shift-mode" 1]]
      [:grave_accent_and_tilde [:!Sgrave_accent_and_tilde] ["shift-mode" 1]]
      [:0 [:!S0] ["shift-mode" 1]]
      [:1 [:!S1] ["shift-mode" 1]]
      [:2 [:!S2] ["shift-mode" 1]]
      [:3 [:!S3] ["shift-mode" 1]]
      [:4 [:!S4] ["shift-mode" 1]]
      [:5 [:!S5] ["shift-mode" 1]]
      [:6 [:!S6] ["shift-mode" 1]]
      [:7 [:!S7] ["shift-mode" 1]]
      [:8 [:!S8] ["shift-mode" 1]]
      [:9 [:!S9] ["shift-mode" 1]]
      [:0 [:!S0] ["shift-mode" 1]]
      [:hyphen [:!Shyphen] ["shift-mode" 1]]
    ]}

    {:des "symbol mode" :rules [
      [:condi :kinesis-keyboard] 
      [:return_or_enter ["symbol-mode" 1] ["nav-mode" 0] {:afterup ["symbol-mode" 0]}]
      [:q [:!S5] ["symbol-mode" 1]]
      [:w [:grave_accent_and_tilde] ["symbol-mode" 1]]
      [:e [:equal_sign] ["symbol-mode" 1]]
      [:r [:!S7] ["symbol-mode" 1]]
      [:t [:!Sbackslash] ["symbol-mode" 1]]
      ; [:y [:!Sy] ["symbol-mode" 1]]
      [:y [:!Sreturn_or_enter :grave_accent_and_tilde :grave_accent_and_tilde :grave_accent_and_tilde :!Sreturn_or_enter :!Sreturn_or_enter :grave_accent_and_tilde :grave_accent_and_tilde :grave_accent_and_tilde  :up_arrow] ["symbol-mode" 1]]
      [:u [:!Sgrave_accent_and_tilde] ["symbol-mode" 1]]
      [:i [:!S8] ["symbol-mode" 1]]
      [:o [:!Sequal_sign] ["symbol-mode" 1]]
      [:p [:!S3] ["symbol-mode" 1]]
      ; [:backslash [:!Sbackslash] ["symbol-mode" 1]]
      [:a [:!Squote] ["symbol-mode" 1]]
      [:s [:quote] ["symbol-mode" 1]]
      [:d [:!S9] ["symbol-mode" 1]]
      [:f [:!S0] ["symbol-mode" 1]]
      [:g [:hyphen] ["symbol-mode" 1]]
      [:h [:!S2] ["symbol-mode" 1]]
      [:j [:open_bracket] ["symbol-mode" 1]]
      [:k [:close_bracket] ["symbol-mode" 1]]
      [:l [:!Shyphen] ["symbol-mode" 1]]
      [:semicolon [:!S4] ["symbol-mode" 1]]
      ; [:quote [:!Squote] ["symbol-mode" 1]]
      [:z [:backslash] ["symbol-mode" 1]]
      [:x [:!S1] ["symbol-mode" 1]]
      [:c [:!Sopen_bracket] ["symbol-mode" 1]]
      [:v [:!Sclose_bracket] ["symbol-mode" 1]]
      [:b [:tab] ["symbol-mode" 1]]
      [:n [:!S6] ["symbol-mode" 1]]
      ; [:m [:!Sm] ["symbol-mode" 1]]
      [:comma [:!Scomma] ["symbol-mode" 1]]
      [:period [:!Speriod] ["symbol-mode" 1]]
      [:slash [:!Sslash] ["symbol-mode" 1]]
    
      [:delete_or_backspace [:spacebar] ["symbol-mode" 1]]
      [:delete_forward [:vk_none ["nav-mode" 1]] ["symbol-mode" 1] {:afterup ["nav-mode" 0]}]
      ; [:delete_forward [:return_or_enter] ["symbol-mode" 1]]
    ]}

    ; {:des "symbol mode learning wheels - disable the regular symbols" :rules [
    ;   [:condi :kinesis-keyboard] 
    ;   [:equal_sign :vk_none]
    ;   [:!Requal_sign :vk_none]
    ;   [:!R1 :vk_none]
    ;   [:!R2 :vk_none]
    ;   [:!R3 :vk_none]
    ;   [:!R4 :vk_none]
    ;   [:!R5 :vk_none]
    ;   [:grave_accent_and_tilde :vk_none]
    ;   [:!Rgrave_accent_and_tilde :vk_none]
    ;   [:!S6 :vk_none]
    ;   [:!S7 :vk_none]
    ;   [:!S8 :vk_none]
    ;   [:!S9 :vk_none]
    ;   [:!S0 :vk_none]
    ;   [:hyphen :vk_none]
    ;   [:!Shyphen :vk_none]
    ;   [:backslash :vk_none]
    ;   [:!Sbackslash :vk_none]
    ;   ; [:open_bracket :vk_none]
    ;   ; [:close_bracket :vk_none]
    ;   [:!Sopen_bracket :vk_none]
    ;   [:!Sclose_bracket :vk_none]
    ; ]}
    

    {:des "nav mode cmd" :rules [
      [:condi :kinesis-keyboard ["nav-mode-cmd" 1]] 
      [:h [:!Cleft_arrow]]
      [:j [:!Cdown_arrow]]
      [:k [:!Cup_arrow]]
      [:l [:!Cright_arrow]]
      ]
    }
    {:des "nav mode opt" :rules [
      [:condi :kinesis-keyboard ["nav-mode-opt" 1] ["nav-mode-opt-shift" 0]] 
      [:a [:left_shift ["nav-mode-opt-shift" 1]] ["nav-mode-opt" 1] {:afterup ["nav-mode-opt-shift" 0]}]
      [:h [:!Oleft_arrow]]
      [:j [:!Odown_arrow]]
      [:k [:!Oup_arrow]]
      [:l [:!Oright_arrow]]
      ]
    }
    {:des "nav mode shift" :rules [
      [:condi :kinesis-keyboard ["nav-mode-shift" 1]] 
      [:s [:left_option ["nav-mode-opt-shift" 1]] ["nav-mode-shift" 1] {:afterup ["nav-mode-opt-shift" 0]}]
      [:h [:!Sleft_arrow]]
      [:j [:!Sdown_arrow]]
      [:k [:!Sup_arrow]]
      [:l [:!Sright_arrow]]
      ]
    }
    {:des "nav mode opt-shift" :rules [
      [:condi :kinesis-keyboard ["nav-mode-opt-shift" 1]] 
      [:h [:!OSleft_arrow]]
      [:j [:!OSdown_arrow]]
      [:k [:!OSup_arrow]]
      [:l [:!OSright_arrow]]
      ]
    }

    {:des "nav mode" :rules [
      [:condi :kinesis-keyboard ["nav-mode-cmd" 0] ["nav-mode-opt" 0] ["nav-mode-shift" 0] ["nav-mode-opt-shift" 0]] 
      [:delete_forward ["nav-mode" 1] nil {:afterup ["nav-mode" 0]}]
      ; [:q [:!Sq ["nav-mode" 0]] ["nav-mode" 1]]
      ; [:w [:!Sw ["nav-mode" 0]] ["nav-mode" 1]]
      [:e [:!Cf] ["nav-mode" 1]]
      [:r [:!Cr] ["nav-mode" 1]]
      ; [:t [:!St] ["nav-mode" 1]]
      [:y [:home] ["nav-mode" 1]]
      [:u [:page_up] ["nav-mode" 1]]
      [:i [:page_down] ["nav-mode" 1]]
      [:o [:!Cdelete_or_backspace] ["nav-mode" 1]]
      [:p [:!Cdelete_forward] ["nav-mode" 1]]
      ; [:backslash [:!Sbackslash] ["nav-mode" 1]]
      ; [:a [:left_shift] ["nav-mode" 1]]
      [:a [:left_shift ["nav-mode-shift" 1]] ["nav-mode" 1] {:afterup ["nav-mode-shift" 0]}]
      [:s [:left_option ["nav-mode-opt" 1]] ["nav-mode" 1] {:afterup ["nav-mode-opt" 0]}]
      [:d [:left_control] ["nav-mode" 1]]
      [:f [:left_command ["nav-mode-cmd" 1]] ["nav-mode" 1] {:afterup ["nav-mode-cmd" 0]}]
      ; [:g [:!Sg] ["nav-mode" 1]]
      [:h [:left_arrow] ["nav-mode" 1]]
      [:j [:down_arrow] ["nav-mode" 1]]
      [:k [:up_arrow] ["nav-mode" 1]]
      [:l [:right_arrow] ["nav-mode" 1]]
      [:semicolon [:end] ["nav-mode" 1]]
      ; [:quote [:!Squote] ["nav-mode" 1]]
      ; [:z [:!Sz] ["nav-mode" 1]]
      [:x [:!Cx] ["nav-mode" 1]]
      [:c [:!Cc] ["nav-mode" 1]]
      [:v [:!Cv] ["nav-mode" 1]]
      ; [:b [:!Sb] ["nav-mode" 1]]
      [:n [:!Odelete_or_backspace] ["nav-mode" 1]]
      [:m [:delete_or_backspace] ["nav-mode" 1]]
      [:comma [:delete_forward] ["nav-mode" 1]]
      [:period [:!Odelete_forward] ["nav-mode" 1]]
      ; [:slash [:!Sslash] ["nav-mode" 1]]
      ; [:open_bracket [:!Sopen_bracket] ["nav-mode" 1]]
      ; [:close_bracket [:!Sclose_bracket] ["nav-mode" 1]]
      ; [:up_arrow [:!Sup_arrow] ["nav-mode" 1]]
      ; [:down_arrow [:!Sdown_arrow] ["nav-mode" 1]]
      ; [:left_arrow [:!Sleft_arrow] ["nav-mode" 1]]
      ; [:right_arrow [:!Sright_arrow] ["nav-mode" 1]]
      ; [:equal_sign [:!Sequal_sign] ["nav-mode" 1]]
      ; [:grave_accent_and_tilde [:!Sgrave_accent_and_tilde] ["nav-mode" 1]]
      ; [:0 [:!S0] ["nav-mode" 1]]
      ; [:1 [:!S1] ["nav-mode" 1]]
      ; [:2 [:!S2] ["nav-mode" 1]]
      ; [:3 [:!S3] ["nav-mode" 1]]
      ; [:4 [:!S4] ["nav-mode" 1]]
      ; [:5 [:!S5] ["nav-mode" 1]]
      ; [:6 [:!S6] ["nav-mode" 1]]
      ; [:7 [:!S7] ["nav-mode" 1]]
      ; [:8 [:!S8] ["nav-mode" 1]]
      ; [:9 [:!S9] ["nav-mode" 1]]
      ; [:0 [:!S0] ["nav-mode" 1]]
      ; [:hyphen [:!Shyphen] ["nav-mode" 1]]
      [:return_or_enter [:return_or_enter] ["nav-mode" 1]]
    ]}

    {:des "have home emit CTOS modifiers" :rules [
      [:condi :kinesis-keyboard] 
      [:##home {:key :left_command :modi [:left_command :left_control :left_option :left_shift]}]
    ]}

    {:des "have caps_lock emit CTOS modifiers in combination with shfit and caps_lock by itself" :rules [
      [:condi :apple-keyboard] 
      [:##home {:key :left_command :modi [:left_command :left_control :left_option :left_shift]}]
      [:!Rcaps_lock {:key :left_command :modi [:left_command :left_control :left_option :left_shift]} 
          nil {:alone {:key :caps_lock}} ]
      [:!Scaps_lock {:key :left_command :modi [:left_command :left_control :left_option :left_shift]} 
          nil {:alone {:key :caps_lock}} ]
      [:##caps_lock :caps_lock]
    ]}

    {:des "command left/right to opt left/right" :rules [
      [:condi :kinesis-keyboard] 
      [:!Cleft_arrow {:key :left_arrow :modi [:left_option]}]
      [:!Cright_arrow {:key :right_arrow :modi [:left_option]}]
    ]}

    {:des "command up/down to page_up/page_down" :rules [
      [:condi :kinesis-keyboard] 
      [:!Cup_arrow :page_up]
      [:!Cdown_arrow :page_down]
    ]}

    {:des "command backsapce to opt backspace" :rules [
      [:condi :kinesis-keyboard] 
      [:!Cdelete_or_backspace {:key :delete_or_backspace :modi [:left_option]}]
      [:!Qdelete_or_backspace {:key :delete_or_backspace :modi [:left_option]}]
    ]}

    {:des "some common mappings between cmd and hyper" :rules [
      [:condi :kinesis-keyboard] 
      [:!CTOSc {:key c :modi [:left_command]}]
      [:!CTOSt {:key t :modi [:left_command]}]
      [:!CTOSv {:key v :modi [:left_command]}]
    ]}


    ; same app window switching - we are doing this with hammerspoon now
    ; {:des "better keybinding for switching between windows of same app" :rules [
    ;    [:!CTOSn {:key :grave_accent_and_tilde :modi [:left_command]}]
    ; ]}

    ; {:des "prevent using shift+button when they are on the same side of the board" :rules [
    ;   ;; left side
    ;   [:!Sq :vk_none]
    ;   [:!Sw :vk_none]
    ;   [:!Se :vk_none]
    ;   [:!Sr :vk_none]
    ;   [:!St :vk_none]
    ;   [:!Sa :vk_none]
    ;   [:!Ss :vk_none]
    ;   [:!Sd :vk_none]
    ;   [:!Sf :vk_none]
    ;   [:!Sg :vk_none]
    ;   [:!Sz :vk_none]
    ;   [:!Sx :vk_none]
    ;   [:!Sc :vk_none]
    ;   [:!Sv :vk_none]
    ;   [:!Sb :vk_none]
    ;   [:!S1 :vk_none]
    ;   [:!S2 :vk_none]
    ;   [:!S3 :vk_none]
    ;   [:!S4 :vk_none]
    ;   [:!S5 :vk_none]
    ;   ;; right side
    ;   [:!Ry :vk_none]
    ;   [:!Ru :vk_none]
    ;   [:!Ri :vk_none]
    ;   [:!Ro :vk_none]
    ;   [:!Rp :vk_none]
    ;   [:!Rh :vk_none]
    ;   [:!Rj :vk_none]
    ;   [:!Rk :vk_none]
    ;   [:!Rl :vk_none]
    ;   [:!Rn :vk_none]
    ;   [:!Rm :vk_none]
    ;   [:!R6 :vk_none]
    ;   [:!R7 :vk_none]
    ;   [:!R8 :vk_none]
    ;   [:!R9 :vk_none]
    ;   [:!R0 :vk_none]
    ; ]}

    ; {:des "test one shot shift num" :rules [
    ;   [:3 ["shift-mode" 1]]
    ;   [:8 ["shift-mode" 1]]
    ;   [:q [:!Sq ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:w [:!Sw ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:e [:!Se ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:r [:!Sr ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:t [:!St ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:y [:!Sy ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:u [:!Su ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:i [:!Si ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:o [:!So ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:p [:!Sp ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:a [:!Sa ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:s [:!Ss ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:d [:!Sd ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:f [:!Sf ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:g [:!Sg ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:h [:!Sh ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:j [:!Sj ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:k [:!Sk ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:l [:!Sl ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:semicolon [:!Ssemicolon ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:z [:!Sz ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:x [:!Sx ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:v [:!Sv ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:b [:!Sb ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:n [:!Sn ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:m [:!Sm ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:comma [:!Scomma ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:period [:!Speriod ["shift-mode" 0]] ["shift-mode" 1]]
    ;   [:slash [:!Sslash ["shift-mode" 0]] ["shift-mode" 1]]
    ;   ; [:u :!Su] [:i :!Si] [:o :!So] [:p :!Sp] [:backslash :!Sbackslash]
    ;   ; [:h :!Sh] [:j :!Sj] [:k :!Sk] [:l :!Sl] [:semicolon :!Ssemicolon] [:quote :!Squote]
    ;   ; [:n :!Sn] [:m :!Sm] [:comma :!Scomma] [:period :!Speriod] [:slash :!Sslash]
    ; ]}

    ; {:des "f-mode (rhs shift)" :rules [:f-mode
    ;   [:6 :!T6] [:7 :!T7] [:8 :!T8] [:9 :!T9] [:0 :!T0]
    ;   [:y :!Sy] [:u :!Su] [:i :!Si] [:o :!So] [:p :!Sp] [:backslash :!Sbackslash]
    ;   [:h :!Sh] [:j :!Sj] [:k :!Sk] [:l :!Sl] [:semicolon :!Ssemicolon] [:quote :!Squote]
    ;   [:n :!Sn] [:m :!Sm] [:comma :!Scomma] [:period :!Speriod] [:slash :!Sslash]
    ; ]}
    ; {:des "j-mode (lhs shift)" :rules [:j-mode
    ;   [:equal_sign :!Sequal_sign] [:1 :!T1] [:2 :!T2] [:3 :!T3] [:4 :!T4] [:5 :!T5]
    ;   [:q :!Sq] [:w :!Sw] [:e :!Se] [:r :!Sr] [:t :!St]
    ;   [:a :!Sa] [:s :!Ss] [:d :!Sd] [:f :!Sf] [:g :!Sg]
    ;   [:z :!Sz] [:x :!Sx] [:c :!Sc] [:v :!Sv] [:b :!Sb]
    ;   [:grave_accent_and_tilde [:!Sgrave_accent_and_tilde]] ; -> ~
    ;   [:k :escape]
    ; ]}
    ; {:des "d-mode (rhs symbols)" :rules [:d-mode
    ;   [:y :vk_none] [:u :open_bracket] [:i :close_bracket] [:o :!S6] [:p :vk_none]
    ;   [:h :backslash] [:j :!S9] [:k :!S0] [:l :!S8] [:semicolon :equal_sign]
    ;   [:n :!S1] [:m :!Sopen_bracket] [:comma :!Sclose_bracket] [:period :!S5] [:slash :vk_none]
    ; ]}
    ; {:des "k-mode (lhs symbols)" :rules [:k-mode
    ;   [:q :vk_none] [:w :!S2] [:e :hyphen] [:r :!Shyphen] [:t :vk_none]
    ;   [:a :!S4] [:s :!Squote] [:d :quote] [:f :grave_accent_and_tilde] [:g :!Sequal_sign]
    ;   [:z :vk_none] [:x :!S3] [:c :!S7] [:v :!Sbackslash] [:b :!Sgrave_accent_and_tilde]
    ;   [:j :escape]
    ; ]}
    ; {:des "v-mode (nav)" :rules [:v-mode
    ;   [:y :vk_none] [:u :page_up] [:i :home] [:o :end] [:p :vk_none]
    ;   [:##h :left_arrow] [:##j :down_arrow] [:##k :up_arrow] [:##l :right_arrow] [:semicolon :vk_none]
    ;   [:n :vk_none] [:m :page_down] [:comma :vk_none] [:period :vk_none] [:slash :vk_none]
    ; ]}
    ; {:des "m-mode (numbers)" :rules [:m-mode
    ;   [:q :vk_none] [:w :1] [:e :2] [:r :3] [:t :vk_none]
    ;   [:a :0] [:s :4] [:d :5] [:f :6] [:g :equal_sign]
    ;   [:z :vk_none] [:x :7] [:c :8] [:v :9] [:b :vk_none]
    ; ]}
]} ;; main

